import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> arr) 
	{
		int n = arr.size();
		int ind = -1;

		for(int i = n-2;i>=0;i--){
			if(arr.get(i) < arr.get(i+1)){
				ind = i;
				break;
			}
		}

		if(ind == -1){
			reverse(arr,0,n-1);
			return arr;
		}
		for(int i = n-1;i>ind;i--){
			if(arr.get(i) > arr.get(ind)){
				swap(arr,i,ind);
				break;
			}
		}
		reverse(arr,ind+1,n-1);
		return arr;
	}
	public static ArrayList<Integer> reverse(ArrayList<Integer> arr,int i,int j){
		while(i < j){
			int temp = arr.get(j);
			arr.set(j,arr.get(i));
			arr.set(i,temp);
			i++;
			j--;
		}
		return arr;
	}
	public static void swap(ArrayList<Integer> arr,int i,int j){
			int temp = arr.get(j);
			arr.set(j,arr.get(i));
			arr.set(i,temp);
	}