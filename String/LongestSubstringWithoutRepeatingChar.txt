class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        int n = s.length();
        int max = Integer.MIN_VALUE;
        HashMap<Character,Integer>map = new HashMap<>();
        int i = -1;
        int j = -1;
        while(true){
            boolean f1 = false;
            boolean f2 = false;
            while(i < n-1){
                i++;
                f1 = true;
                char c = s.charAt(i);
                map.put(c,map.getOrDefault(c,0)+1);
                if(map.get(c) == 2){
                    break;
                }else{
                    max = Math.max(max,i - j);
                }
            }
            while(j < i){
                j++;
                f2 = true;
                char c = s.charAt(j);
                if(map.get(c) == 1){
                    map.remove(c);
                }else{
                    map.put(c,map.get(c) - 1);
                    if(map.get(c) == 1){
                    break;
                   }else{
                    continue;
                   }
                }
            }
            if(f1 == false && f2 == false){
                break;
            }
        }
        return max != Integer.MIN_VALUE?max:0;
    }
}